package co.vinod.training.dao.impl;

import java.util.List;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import co.vinod.training.dao.DaoException;
import co.vinod.training.dao.ProductDao;
import co.vinod.training.entity.Product;

@Repository("jtDao")
public class JdbcTemplateProductDao implements ProductDao {

	// in practice, required should be "true"
	@Autowired(required = false)
	private JdbcTemplate template;

	public JdbcTemplateProductDao() {
		System.out.println("JdbcTemplateProductDao instantiated!");
		System.out.println("In JdbcTemplateProductDao(), template is " + template);
	}
	
	@PostConstruct
	public void init() {
		System.out.println("In JdbcTemplateProductDao.init(), template is " + template);
	}
	
	@PreDestroy
	public void destroy() {
		System.out.println("Destroying the instanceof JdbcTemplateProductDao");
	}

	@Override
	public void addNewProduct(Product product) throws DaoException {
		String sql = "insert into products values(?,?,?,?,?,?,?,?,?,?)";
		template.update(sql, 
			product.getProductId(),
			product.getProductName(),
			product.getCategoryId(),
			product.getSupplierId(),
			product.getQuantityPerUnit(),
			product.getUnitPrice(),
			product.getUnitsInStock(),
			product.getUnitsOnOrder(),
			product.getReorderLevel(),
			product.getDiscontinued());
		
	}

	@Override
	public Product getProductById(Integer productId) throws DaoException {
		return null;
	}

	@Override
	public void updateProduct(Product product) throws DaoException {
		String sql = "update products set product_name=?,"
				+ "category_id=?, supplier_id=?, quantity_per_unit=?,"
				+ "unit_price=?, units_in_stock=?, units_on_order=?,"
				+ "reorder_level=?, discontinued=? where product_id=?";
		template.update(sql, 
				product.getProductName(),
				product.getCategoryId(),
				product.getSupplierId(),
				product.getQuantityPerUnit(),
				product.getUnitPrice(),
				product.getUnitsInStock(),
				product.getUnitsOnOrder(),
				product.getReorderLevel(),
				product.getDiscontinued(),
				product.getProductId());
	}

	@Override
	public void deleteProduct(Integer productId) throws DaoException {
		template.update("delete from products where product_id=?", productId);
	}

	@Override
	public int count() throws DaoException {

		return 0;
	}

	@Override
	public List<Product> getAllProducts() throws DaoException {

		return null;
	}

	@Override
	public List<Product> getProductsByCategory(Integer categoryId) throws DaoException {

		return null;
	}

	@Override
	public List<Product> getProductsBySupplier(Integer supplierId) throws DaoException {

		return null;
	}

	@Override
	public List<Product> getProductsByPriceRange(Double min, Double max) throws DaoException {

		return null;
	}

	@Override
	public List<Product> getDiscontinuedProducts() throws DaoException {

		return null;
	}

	@Override
	public List<Product> getOutOfStockProducts() throws DaoException {

		return null;
	}

}
